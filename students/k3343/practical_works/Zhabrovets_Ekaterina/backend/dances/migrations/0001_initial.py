# Generated by Django 3.0.5 on 2020-06-25 14:51

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(blank=True, max_length=20)),
                ('telephone', models.CharField(max_length=50, verbose_name='Телефон')),
                ('full_name', models.CharField(max_length=50, verbose_name='Фамилия-Имя')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Дата Рождения')),
                ('country', models.CharField(max_length=50, verbose_name='Страна')),
                ('is_teacher', models.BooleanField(default=False, verbose_name='Статус учителя')),
                ('biography', models.TextField(verbose_name='О себе')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='DanceStyle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Стиль')),
                ('info', models.TextField(verbose_name='Информация о стиле')),
            ],
            options={
                'verbose_name': 'Стиль',
                'verbose_name_plural': 'Стили',
            },
        ),
        migrations.CreateModel(
            name='Hall',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название зала')),
                ('cost', models.IntegerField(verbose_name='Стоимость аренды за час')),
                ('capacity', models.IntegerField(verbose_name='Вместимость')),
            ],
            options={
                'verbose_name': 'Зал',
                'verbose_name_plural': 'Залы',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
                ('address', models.CharField(max_length=100, verbose_name='Адрес')),
            ],
            options={
                'verbose_name': 'Локация',
                'verbose_name_plural': 'Локации',
            },
        ),
        migrations.CreateModel(
            name='Workshop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Мастер-класс', max_length=100, verbose_name='Название')),
                ('date', models.DateField(verbose_name='Дата мастер-класса')),
                ('time', models.TimeField(verbose_name='Время')),
                ('duration', models.FloatField(verbose_name='Продолжительность')),
                ('info', models.TextField(verbose_name='Информация')),
                ('price', models.IntegerField(verbose_name='Стоимость аренды за час')),
                ('choreographer', models.ManyToManyField(to=settings.AUTH_USER_MODEL, verbose_name='Хореографы')),
                ('participants', models.ManyToManyField(related_name='added_part', to=settings.AUTH_USER_MODEL, verbose_name='Участники')),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dances.Hall', verbose_name='Место проведения')),
            ],
            options={
                'verbose_name': 'Мастер-класс',
                'verbose_name_plural': 'Мастер-классы',
            },
        ),
        migrations.CreateModel(
            name='QueryForTuition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approved', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Потенциальный педагог')),
            ],
        ),
        migrations.CreateModel(
            name='QueryForParticipance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approved', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Потенциальный участник')),
                ('workshop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dances.Workshop', verbose_name='Мастер-класс')),
            ],
        ),
        migrations.AddField(
            model_name='hall',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dances.Location'),
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Комментарий')),
                ('created', models.DateField(auto_now_add=True, null=True, verbose_name='Дата добавления')),
                ('rating', models.CharField(choices=[('Отлично', 'Отлично'), ('Хорошо', 'Хорошо'), ('Плохо', 'Плохо')], default='Хорошо', max_length=20, verbose_name='Рейтинг')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('workshop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dances.Workshop', verbose_name='Мастер-класс')),
            ],
            options={
                'verbose_name': 'Отзыв',
                'verbose_name_plural': 'Отзывы',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='style',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dances.DanceStyle', verbose_name='Стиль'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
